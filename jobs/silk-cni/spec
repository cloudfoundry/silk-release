---
name: silk-cni

templates:
  pre-start.erb: bin/pre-start
  cni-wrapper-plugin.conflist.erb: config/cni/cni-wrapper-plugin.conflist
  teardown-config.json.erb: config/teardown-config.json

packages:
  - silk-cni

consumes:
- name: cf_network
  type: cf_network
- name: vpa
  type: policy-agent

properties:
  no_masquerade_cidr_range:
    description: "CIDR address block that should not be masqueraded.  Fallsback to cf_network.network link property if property is not provided."
    default: ""

  mtu:
    description: "Pre-encapsulation MTU for containers.  If set, the network interface inside the container will have an MTU that is 50 bytes less than this value, in order to account for VXLAN encap overhead.  If zero, MTU will be automatically configured to account for the VXLAN encapsulation, but it may not account for additional network encapsulations, e.g. IPSec."
    default: 0

  silk_daemon.listen_port:
    description: "Silk CNI plugin connects to the silk daemon on this port."
    default: 23954
  iptables_logging:
    description: "Enables iptables logging for overlay network policies, Application Security Groups and outbound container connection limits.  Logs to the kernel log."
    default: false

  dns_servers:
    description: "DNS servers that containers will use.  If set, this list takes precedence over DNS servers configured through garden."
    default: []

  rate:
    description: "Bandwidth rate in Kbps for traffic through container. 0 for no limit. If rate is set, burst must also be set."
    default: 0

  burst:
    description: "Bandwidth burst in Kb for traffic through container. 0 for no limit. If burst is set, rate must also be set."
    default: 0

  iptables_denied_logs_per_sec:
    description: "Maximum number of iptables logs per second for denied packets."
    default: 1

  iptables_accepted_udp_logs_per_sec:
    description: "Maximum number of iptables logs per second for accepted UDP packets."
    default: 100

  temporary.underlay_interface_names:
    description: "Use with extreme caution. To be used only if there are network interfaces not created by BOSH. Provide names for all interfaces. If provided, only interfaces referenced here will be used. Will not use any bosh interface by default."
    default: []

  disable:
    description: "Disable this monit job.  It will not run. Required for backwards compatability"
    default: false

  host_tcp_services:
    description: "List of TCP addresses running on the BOSH VM that should be accessible from containers.  The address must not be in the 127.0.0.0/8 range.  The network plugin will install an iptables INPUT rule for each service."
    default: []
    example: |
      - 169.254.0.2:9001
      - 169.254.0.2:9002

  host_udp_services:
    description: "List of UDP addresses running on the BOSH VM that should be accessible from containers.  The address must not be in the 127.0.0.0/8 range.  The network plugin will install an iptables INPUT rule for each service."
    default: []
    example: |
      - 169.254.0.2:9001
      - 169.254.0.2:9002

  deny_networks.always:
    default: []
    description: |
      List of CIDR blocks to which all containers will be denied access, regardless of security groups.
      This can severely impact the network connectivity of applications.
      Use with extreme caution and at your own risk.
      These rules apply to all containers.

  deny_networks.running:
    default: []
    description: |
      List of CIDR blocks to which all containers will be denied access, regardless of security groups.
      This can severely impact the network connectivity of applications.
      Use with extreme caution and at your own risk.
      These rules apply to running scheduled containers: apps and tasks.

  deny_networks.staging:
    default: []
    description: |
      List of CIDR blocks to which all containers will be denied access, regardless of security groups.
      This can severely impact the network connectivity of applications.
      Use with extreme caution and at your own risk.
      These rules apply during the staging process.

  outbound_connections.limit:
    default: false
    description: "EXPERIMENTAL: Enables outbound connections count limiting per port on destination host per container."

  outbound_connections.burst:
    default: 1000
    description: |
      EXPERIMENTAL: Maximum number of outbound connections per port on destination host allowed to be opened at once per container.
      Has no effect when `outbound_connections.limit` is false.

  outbound_connections.rate_per_sec:
    default: 100
    description: |
      EXPERIMENTAL: Maximum number of outbound connections to be opened per second per port on destination host per container given that the burst is exhausted.
      Has no effect when `outbound_connections.limit` is false.

  outbound_connections.dry_run:
    default: false
    description: |
      EXPERIMENTAL: When set to True negates the effect of `outbound_connections.limit`. Used together with `iptables_logging` to log what connections would be rejected without actually rejecting them.
      Has no effect when `outbound_connections.limit` is false.
